// Service d'email simplifiÃ© pour le dÃ©veloppement
const emailService = {
  // Envoyer un email de confirmation de commande
  sendOrderConfirmation: async (userEmail, order) => {
    console.log(`ğŸ“§ Email de confirmation envoyÃ© Ã  ${userEmail} pour la commande ${order.orderNumber}`);
    return { success: true, message: 'Email de confirmation envoyÃ©' };
  },

  // Envoyer un email de bienvenue
  sendWelcomeEmail: async (userEmail, firstName) => {
    console.log(`ğŸ“§ Email de bienvenue envoyÃ© Ã  ${userEmail} (${firstName})`);
    return { success: true, message: 'Email de bienvenue envoyÃ©' };
  },

  // Envoyer un email de rÃ©initialisation de mot de passe
  sendPasswordResetEmail: async (userEmail, resetToken) => {
    console.log(`ğŸ“§ Email de rÃ©initialisation envoyÃ© Ã  ${userEmail}`);
    console.log(`ğŸ”— Token de rÃ©initialisation: ${resetToken}`);
    return { success: true, message: 'Email de rÃ©initialisation envoyÃ©' };
  },

  // Envoyer une notification de changement de statut de commande
  sendOrderStatusUpdate: async (userEmail, order, newStatus) => {
    console.log(`ğŸ“§ Notification de statut envoyÃ©e Ã  ${userEmail} - Commande ${order.orderNumber}: ${newStatus}`);
    return { success: true, message: 'Notification de statut envoyÃ©e' };
  }
};

module.exports = emailService;
